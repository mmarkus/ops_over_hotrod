<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2010 Red Hat Inc. and/or its affiliates and other
  ~ contributors as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<infinispan
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:5.0 http://www.infinispan.org/schemas/infinispan-config-5.0.xsd"
      xmlns="urn:infinispan:config:5.0">

   <!--
      ******************************************************************************************************************

      This is a sample Infinispan configuration XML file.  Sensible defaults are always used if elements are left
      out.  For example, have a look at "minimal.xml" which ships in this same distribution.

      This file considers some popular configurations, some commented out, with references to documentation and
      further reading.

      A summary of the format of this XML file and all available options can be see online:

         http://docs.jboss.org/infinispan/5.0/apidocs/config.html

      ******************************************************************************************************************
   -->

   <!--
      ******************************************************************************************************************

      System-wide global settings, which are shared across all caches managed by the same EmbeddedCacheManager

      ******************************************************************************************************************
   -->

   <global>

      <!--
         The asynchronous listener executor is only useful if you have asynchronous listeners attached.  See

            http://community.jboss.org/wiki/ListenersandNotifications

          for more details.
      -->
      <!--
      <asyncListenerExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
         <properties>
            <property name="maxThreads" value="5"/>
            <property name="threadNamePrefix" value="AsyncListenerThread"/>
         </properties>
      </asyncListenerExecutor>
      -->

      <!--
         The asynchronous transport executor is only useful if you intend to use the async cache API or have
         configured your cluster to use asynchronous communications.  See:

            http://community.jboss.org/wiki/AsynchronousAPI
            http://community.jboss.org/wiki/AsynchronousOptions
      -->
      <!--
      <asyncTransportExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
         <properties>
            <property name="maxThreads" value="25"/>
            <property name="threadNamePrefix" value="AsyncSerializationThread"/>
         </properties>
      </asyncTransportExecutor>
      -->

      <!--
         Useful if you have eviction enabled and wish to customize the executor used by the eviction process.

            http://community.jboss.org/wiki/Eviction
      -->
      <!--
      <evictionScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
         <properties>
            <property name="threadNamePrefix" value="EvictionThread"/>
         </properties>
      </evictionScheduledExecutor>
      -->

      <!--
         Useful if you have enabled a Replication Queue and wish to fine tune the scheduled thread that flushes
         such batch RPCs.  See

            http://community.jboss.org/wiki/AsynchronousOptions#Replication_Queue
      -->
      <!--
      <replicationQueueScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
         <properties>
            <property name="threadNamePrefix" value="ReplicationQueueThread"/>
         </properties>
      </replicationQueueScheduledExecutor>
      -->

      <!--
         Enables collection of global JMX statistics, and allows you to customize the JMX domain name under which
         MBeans are registered.
      -->
      <globalJmxStatistics
            enabled="true"
            jmxDomain="org.infinispan"
            cacheManagerName="SampleCacheManager"/>

      <!--
         If the transport is omitted, there is no way to create distributed or clustered caches.
         There is no added cost to defining a transport and not creating a cache that uses one, since the transport
         is created and initialized lazily.  By default, the JGroupsTransport is used.

         Note that the JGroups transport uses sensible defaults if no configuration property is defined.

         See:

            http://community.jboss.org/wiki/ClusteredConfigurationQuickStart
            http://docs.jboss.org/infinispan/5.0/apidocs/org/infinispan/remoting/transport/jgroups/JGroupsTransport.html

      -->
      <transport
            clusterName="infinispan-cluster"
            machineId="m1"
            rackId="r1" nodeName="Node-A">
         <!-- Use the property below to point to a specific JGroups configuration file on your classpath -->
         <!--
         <properties>
            <property name="configurationFile" value="jgroups-tcp.xml" />
         </properties>
         -->
      </transport>

      <!--
         Used to customize the marshaller used to serialize objects and deserialize byte streams.  Also allows you to
         specify custom advancedExternalizers for custom user types.

         See:

            http://community.jboss.org/wiki/Marshalling
            http://community.jboss.org/wiki/PluggingInfinispanWithUserDefinedExternalizers
       -->
      <!--<serialization marshallerClass="org.infinispan.marshall.VersionAwareMarshaller" version="1.0">-->

      <!--<advancedExternalizers>-->
      <!-- AdvancedExternalizer defined as inner static class, with id set via XML configuration -->
      <!--<advancedExternalizer id="1234" externalizerClass="org.infinispan.marshall.AdvancedExternalizerTestt$IdViaConfigObj$AdvancedExternalizer"/>-->
      <!-- AdvancedExternalizer defined as inner static class, with id set via annotation -->
      <!--<advancedExternalizer externalizerClass="org.infinispan.marshall.AdvancedExternalizerTestt$IdViaAnnotationObj$AdvancedExternalizer"/>-->
      <!-- AdvancedExternalizer defined as inner static class, with id set both via XML config and annotation -->
      <!--<advancedExternalizer id="3456" externalizerClass="org.infinispan.marshall.AdvancedExternalizerTestt$IdViaBothObj$AdvancedExternalizer"/>-->
      <!--</advancedExternalizers>-->
      <!--</serialization>-->

      <!--
         Used to register JVM shutdown hooks.
         hookBehavior: DEFAULT, REGISTER, DONT_REGISTER
      -->
      <!-- <shutdown hookBehavior="DEFAULT"/> -->
   </global>

   <!--
      ******************************************************************************************************************
      Default "template" settings, used to create the default cache as well as inherited by all other named caches
      ******************************************************************************************************************
   -->

   <default>

      <locking
            isolationLevel="READ_COMMITTED"
            lockAcquisitionTimeout="20000"
            writeSkewCheck="false"
            concurrencyLevel="5000"
            useLockStriping="false"
            />
      <jmxStatistics enabled="true"/>
      <customInterceptors>
         <interceptor index="0" class="org.infinispansupport.hotrodextenssion.HotrodTransactionsInterceptor"/>
      </customInterceptors>
      <transaction transactionManagerLookupClass="org.infinispan.transaction.lookup.GenericTransactionManagerLookup"/>

   </default>


</infinispan>
